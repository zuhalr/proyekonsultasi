function readURL(a) { if (a.files && a.files[0]) { var e = new FileReader; e.onload = function (a) { $("#image_upload_preview").attr("src", a.target.result), $("#image_upload_preview").attr("width", "180"), $("#image_upload_preview").attr("height", "210") }, e.readAsDataURL(a.files[0]) } } function copytoclipboard(a) { $("#copytext").show(), $("#copytext").val(a); var e = document.getElementById("copytext"); e.select(), document.execCommand("copy"), $("#copytext").hide(), toastr_show("success", "Key sudah di copy, silahkan paste") } function toastr_show(a, e) { toastr[a](e), toastr.options = { closeButton: !1, debug: !1, newestOnTop: !1, progressBar: !1, positionClass: "toast-top-right", preventDuplicates: !1, onclick: null, showDuration: "300", hideDuration: "1000", timeOut: "8000", extendedTimeOut: "1000", showEasing: "swing", hideEasing: "linear", showMethod: "fadeIn", hideMethod: "fadeOut" } } !function () { function a(a) { document.write('<script src="' + dns + a + version + '" type="text/javascript"></script>') } a("assets/js/jquery.min.js"), a("assets/js/bootstrap.min.js"), a("assets/js/frameworks.ui.monev.min.js"), a("assets/js/lazyload.min.js"), a("assets/js/toast.js"), a("assets/js/sweetalert.js"), a("assets/js/select2.full.min.js"), a("assets/js/components-select2.min.js"), a("assets/js/jquery.validate.min.js") }(), jQuery.noConflict(), jQuery(document).ready(function () { var a = "application/x-www-form-urlencoded; charset=utf-8"; window.XDomainRequest && (a = "text/plain"), new LazyLoad, $("#status_kk").change(function () { if (this.checked) { var a = (new Date, "911000" + Math.floor(9999999911 * Math.random() + 21)); $("#no_kk").val(a), $("#no_kk").attr("readonly", !0) } else $("#no_kk").val("").focus(), $("#no_kk").attr("readonly", !1), $("#no_kk").attr("disabled", !1) }), $("#status_nik").change(function () { if (this.checked) { var a = (new Date, "900000" + Math.floor(9999999911 * Math.random() + 11)); $("#nik").val(a), $("#nik").attr("readonly", !0), $("#nik").valid() } else $("#nik").val("").focus(), $("#nik").attr("readonly", !1), $("#nik").attr("disabled", !1) }), $(".mental .fisik").hide(), $("input[name='kln']").click(function () { "f" == this.value ? ($(".mental").hide(), $(".fisik").show(), $("#mental").prop("disabled", !0), $("#fisik").prop("disabled", !1), $("#fisik").attr("readonly", !1)) : "m" == this.value ? ($(".fisik").hide(), $(".mental").show(), $("#fisik").prop("disabled", !0), $("#mental").prop("disabled", !1), $("#mental").attr("readonly", !1)) : "1" == this.value && ($(".mental, .fisik").hide(), $("#fisik, #mental").prop("readonly", !0), $("#fisik, #mental").prop("disabled", !0)) }), $(".ortu").hide(), $("#status_hub").change(function () { "4" == $("#status_hub").val() ? ($(".ortu").hide(), $("#nama_ayah").attr("readonly", !0), $("#nama_ibu").attr("readonly", !0)) : ($(".ortu").show(), $("#nama_ayah").attr("readonly", !1), $("#nama_ibu").attr("readonly", !1)) }), $(".pernikahan").change(function () { "2" == $(".pernikahan").val() ? "1" == $(".status_hub").val() ? ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : "2" == $(".status_hub").val() && ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : "1" == $(".pernikahan").val() ? "1" == $(".status_hub").val() ? ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : "2" == $(".status_hub").val() && ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : "3" == $(".pernikahan").val() ? ($(".cerai").show(), $(".nikah").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : ($(".cerai").hide(), $(".nikah").hide(), $("#no_akta_nikah").attr("readonly", !0), $("#tgl_akta_nikah").attr("readonly", !0)) }), $(".hub_start").show(), $("#akseptors").hide(), $("#status_hub").change(function () { if ("1" == $("#status_hub").val()) { $(".hub_start").show(), $("#akseptors").hide(), $(".nikah").show(), "1" == $(".status_hub").val() ? ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)) : "2" == $(".status_hub").val() && ($(".nikah").show(), $(".cerai").hide(), $("#no_akta_nikah").attr("readonly", !1), $("#tgl_akta_nikah").attr("readonly", !1)); { $("#status_hub option:selected").text() } } else if ("2" == $("#status_hub").val()) { $(".hub_start").show(), $("#akseptors").hide(); { $("#status_hub option:selected").text() } } else "3" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").show(), $(".nikah").hide(), $(".cerai").hide(), $("#status_nikah").val("1").trigger("change"), $("input[name=jenis_kelamin][value='p']").prop("checked", !0)) : "4" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change")) : "5" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("#status_nikah").val("1").trigger("change"), $(".nikah").show(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change")) : "6" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change")) : "7" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("1").trigger("change"), $(".nikah").show()) : "8" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("1").trigger("change"), $(".nikah").show()) : "9" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change")) : "10" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change"), $(".nikah").hide()) : "11" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change"), $(".nikah").hide()) : "12" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change"), $(".nikah").hide()) : "13" == $("#status_hub").val() ? ($(".hub_start").show(), $("#akseptors").hide(), $("input[name=jenis_kelamin]").prop("checked", !1), $("#status_nikah").val("2").trigger("change"), $(".nikah").hide()) : ($("#akseptors").hide(), $("#status_nikah").val("1").trigger("change")) }), setTimeout(function () { $(".alert").hide() }, 3e3), $(".nik").on("keypress keyup blur", function (a) { $(this).val($(this).val().replace(/[^\d].+/, "")), (a.which < 48 || a.which > 57) && a.preventDefault(); var e = $(this).val(); $.ajax({ url: dns + "penduduk/keluarga/nik_check/" + e, type: "GET", data: e, dataType: "JSON", success: function (a) { "302" == a.code && $(".nikready").modal("show").delay("500") } }) }), $(".trashkk").on("click", function (a) { a.preventDefault(), $(".form-group").removeClass("has-error"), $(".help-block").empty(); var e = $(this).attr("data-uuid"); $.ajax({ url: dns + "penduduk/keluarga/gotrash/" + e, type: "GET", dataType: "JSON", success: function (a) { "200" == a.code && (toastr_show("success", "Success"), location.reload()) }, error: function () { toastr_show("warning", "Failed") } }) }), $(".editkk").on("click", function (a) { a.preventDefault(), $(".form-group").removeClass("has-error"), $(".help-block").empty(); var e = $(this).attr("data-id"); $.ajax({ url: dns + "penduduk/keluarga/getdetail/" + e, type: "GET", dataType: "JSON", success: function (a) { "200" == a.code && ($('[name="uuid"]').val(a.data.uuid), "1" == a.data.status ? $('[name="status_kk"]').prop("checked", !1) : "0" == a.data.status && $('[name="status_kk"]').prop("checked", !0), $('[name="kk"]').val(a.data.kk)) }, error: function () { toastr_show("warning", "Failed") } }) }), $(".submitkk").on("click", function (a) { a.preventDefault(), $(".form-group").removeClass("has-error"), $(".help-block").empty(), $.ajax({ url: dns + "penduduk/keluarga/updatekk", type: "POST", data: $(".kkform").serialize(), dataType: "JSON", success: function (a) { "200" == a.code && (toastr_show("success", "Success"), location.reload()) }, error: function () { console.log("400"), console.log($(".kkform").serialize()), toastr_show("warning", "Failed") } }) }), $(".ipkkdel").on("click", function (a) { a.preventDefault(), $.ajax({ url: dns + "penduduk/keluarga/delete", type: "POST", data: { uuid: $(this).attr("data-uuid"), kk: $(this).attr("data-kk") }, dataType: "json", success: function (a) { "200" == a.code ? (toastr_show("success", "Data No. KK berhasil dihapus dari aplikasi"), location.reload()) : "400" == a.code && (toastr_show("warning", "Failed"), location.reload()) } }) }), $(".cnikmodal").click(function () { $(".nikready").hide(), $(".nik").focus() }), $(".form-edit, .btn-submit").hide(), $(".btn-edit").on("click", function () { $(".view-data, .form-edit").toggle(), "Ubah" === $.trim($(this).text()) ? ($(this).text("Batal"), $("#form-edit").hide(), $(".btn-submit").show()) : ($(this).text("Ubah"), $("#form-edit").show(), $(".btn-submit").hide()) }), $(".selesai").hide(), $("#current_work").change(function () { this.checked ? $(".selesai").fadeIn("fast") : $(".selesai").fadeOut("fast") }), $("#inputFile").change(function () { readURL(this) }) }), jQuery(document).ready(function () { $.validator.setDefaults({ debug: !0 }), $.validator.addMethod("sg_alamat", function (a) { return a = a.trim(), a && /^[A-Za-z\d !@#$%^&*()_+\-=`~,.:";'{}|\\\[\]\/\r\n]*$/.test(a) }, "Mohon masukkan alamat yang benar"), $.validator.addMethod("sg_kk", function (a) { return a = a.trim(), !a || /^[0-9]*$/.test(a) }, "Mohon masukkan No. KK. atau NIK yang benar"), $.validator.addMethod("hubungan", function (a) { return a = a.trim(), !a || /^[1234567890]+[0-9]*$/.test(a) }), $("#create_kk").find(".select2").select2({ theme: "bootstrap" }).change(function () { $(this).valid() }).end().validate({ errorClass: "help-block", errorElement: "div", errorPlacement: function (a, e) { a.insertAfter("radio" == e.attr("type") || "checkbox" == e.attr("type") ? ".span" : e.hasClass("select2") ? e.next("span") : e.parent(".input-group").length ? e.parent() : e) }, highlight: function (a) { $(a).parents(".form-group").addClass("has-error").removeClass("has-success") }, unhighlight: function (a) { $(a).parents(".form-group").addClass("has-success").removeClass("has-error") }, success: function (a) { a.closest(".form-group").removeClass("has-success has-error"), a.remove() }, submitHandler: function () { $("#create_kk").valid() && $.ajax({ url: dns + "penduduk/keluarga/create_kk", type: "POST", data: $("#create_kk").serialize(), dataType: "JSON", success: function (a) { $(".createkk").text("Simpan"), $(".createkk").attr("disabled", !1), $(".modal").modal("hide"), "200" == a.code ? (toastr_show("success", "Data berhasil diproses"), window.location.replace(dns + "penduduk/keluarga/new/" + a.number)) : "409" == a.code ? toastr_show("warning", a.message) : "422" == a.code ? toastr_show("error", "Terdapat kesalahan dari server") : toastr_show("warning", "Data gagal dimasukkan") } }) }, rules: { kk: { required: !0, minlength: 15, maxlength: 16, number: !0, sg_kk: !0 } }, messages: { kk: { required: "No. KK harus dimasukkan" } } }), $("#penduduk").find(".select2").select2({ theme: "bootstrap" }).change(function () { $(this).valid() }).end().validate({ errorClass: "help-block", errorElement: "div", errorPlacement: function (a, e) { a.insertAfter("radio" == e.attr("type") || "checkbox" == e.attr("type") ? e.next().parent("label").next() : e.hasClass("select2") ? e.next("span") : e.parent(".input-group").length ? e.parent() : e) }, highlight: function (a) { $(a).parents(".form-group").addClass("has-error").removeClass("has-success") }, unhighlight: function (a) { $(a).parents(".form-group").addClass("has-success").removeClass("has-error") }, success: function (a) { a.closest(".form-group").removeClass("has-success has-error"), a.remove() }, submitHandler: function () { $("#penduduk").valid() && $.ajax({ url: dns + "penduduk/keluarga/create_person", type: "POST", data: $("#penduduk").serialize(), dataType: "JSON", success: function (a) { $(".createkk").text("Simpan"), $(".createkk").attr("disabled", !1), $(".modal").modal("hide"), "200" == a.code ? (toastr_show("success", "Data berhasil diproses"), window.location.replace(dns + "penduduk/keluarga/detail/" + a.number)) : toastr_show("warning", "Data gagal dimasukkan") } }) }, rules: { status_hub: { required: !0 }, nik: { required: !0, digits: !0, sg_kk: !0 }, nama_lengkap: { required: !0 }, jenis_kelamin: { required: !0 }, tempat: { required: !0 }, tanggal: { required: !0 }, bulan: { required: !0 }, tahun: { required: !0 }, pendidikan: { required: !0 }, status_sipil: { required: !0 }, status_sipils: { required: !0 }, pekerjaan: { required: !0 }, status_nikah: { required: !0 }, status_tinggal: { required: !0 }, alamat: { required: !0, minlength: 5, sg_alamat: !0 }, status_rumah: { required: !0 }, no_bpjs: { required: !1, number: !0 }, no_sim: { required: !1, number: !0 }, no_npwp: { required: !1, number: !0 }, no_passport: { required: !1 }, kitap: { number: !0, required: !1 }, tinggi_badan: { required: !0 }, berat_badan: { required: !0 } }, messages: { status_hub: { required: "Hubungan harus dimasukkan" }, nik: { required: "NIK harus dimasukkan" }, nama_lengkap: { required: "Nama harus dimasukkan" }, jenis_kelamin: { required: "Jenis Kelamin harus dimasukkan" }, tempat: { required: "Tempat Lahir harus dimasukkan" }, tanggal: { required: "Tanggal Lahir harus dimasukkan" }, bulan: { required: "Bulan Lahir harus dimasukkan" }, tahun: { required: "Tahun Lahir harus dimasukkan" }, pendidikan: { required: "Pendidikan harus dimasukkan" }, status_sipil: { required: "Sipil harus dimasukkan" }, pekerjaan: { required: "Pekerjaan harus dimasukkan" }, status_nikah: { required: "Status Nikah harus dimasukkan" }, status_tinggal: { required: "Status Tinggal harus dimasukkan" }, alamat: { required: "Alamat Tinggal harus dimasukkan" }, status_rumah: { required: "Status Rumah harus dimasukkan" }, no_bpjs: { required: "No. BPJS Kesehatan harus dimasukkan", number: "Silahkan masukkan angka [0-9]" }, no_sim: { required: "No. SIM harus dimasukkan", number: "Silahkan masukkan angka [0-9]" }, no_passport: { required: "No. Passport harus dimasukkan", number: "Silahkan masukkan angka [0-9]" }, kitap: { required: "Kitap harus dimasukkan" }, tinggi_badan: { required: "Tinggi Badan harus dimasukkan" }, berat_badan: { required: "Berat Badan harus dimasukkan" } } }), $("#kk").find(".select2").select2({ theme: "bootstrap" }).change(function () { $(this).valid() }).end().validate({ errorClass: "help-block", errorElement: "div", ignore: ".ignore", errorPlacement: function (a, e) { a.insertAfter("radio" == e.attr("type") || "checkbox" == e.attr("type") ? ".span" : e.hasClass("select2") ? e.next("span") : e) }, highlight: function (a) { $(a).parents(".form-group").addClass("has-error").removeClass("has-success") }, unhighlight: function (a) { $(a).parents(".form-group").addClass("has-success").removeClass("has-error") }, success: function (a) { a.closest(".form-group").removeClass("has-success has-error"), a.remove() }, submitHandler: function () { return alert("valid form submitted"), !1 }, rules: { no_kk: { required: !0, digits: !0, sg_kk: !0 }, nik: { required: !0, digits: !0, sg_kk: !0 }, nama_kk: { required: !0 }, jenis_kelamin: { required: !0 }, tempat: { required: !0 }, tanggal: { required: !0 }, bulan: { required: !0 }, tahun: { required: !0 }, status_nikah: { required: !0 }, status_tinggal: { required: !0 }, pendidikan: { required: !0 }, pekerjaan: { required: !0 }, alamat: { required: !0, minlength: 5, sg_alamat: !0 } }, messages: { no_kk: { required: "No. KK harus dimasukkan" }, nik: { required: "NIK KK. harus dimasukkan" }, nama_kk: { required: "Nama Kepala Keluarga harus dimasukkan" }, jenis_kelamin: { required: "Jenis Kelamin harus dimasukkan" }, tempat: { required: "Tempat Lahir harus dimasukkan" }, tanggal: { required: "Tanggal Lahir harus dimasukkan" }, bulan: { required: "Bulan Lahir harus dimasukkan" }, tahun: { required: "Tahun Lahir harus dimasukkan" }, status_nikah: { required: "Status Nikah harus dimasukkan" }, status_tinggal: { required: "Status Tinggal harus dimasukkan" }, pendidikan: { required: "Pendidikan harus dimasukkan" }, pekerjaan: { required: "Pekerjaan Lahir harus dimasukkan" }, alamat: { required: "Alamat harus dimasukkan" } } }) });